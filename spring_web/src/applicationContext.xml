<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com" ></context:component-scan>
    <!--
        加载jdbc.properties属性配置文件
    -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!--  配置数据库连接池  -->
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
        <property name="url" value="${url}" />
        <property name="driverClassName" value="${driverClassName}" />
        <property name="initialSize" value="${initialSize}" />
        <property name="maxActive" value="${maxActive}" />
    </bean>

    <!-- 配置Spring提供的工具类，JdbcTemplate。它用于执行sql语句 -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 配置可执行具名|命名参数的sql的jdbcTemplate -->
    <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
          id="namedParameterJdbcTemplate">
        <constructor-arg index="0" ref="dataSource" />
    </bean>


    <!-- 1.事务管理器 DataSourceTransactionManager -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--2.自定义事务属性细节-->
    <tx:advice id="tx_advice" transaction-manager="transactionManager">
        <!-- tx:attributes  自定义事务属性 -->
        <tx:attributes>
            <!--
                tx:method 为某个|某些方法配置事务属性
                    name="updateBook"   方法名（ 精确匹配 | 半模糊匹配 | 全模糊匹配 ）
            -->
            <tx:method name="updateBook" propagation="REQUIRED"/>
            <tx:method name="updateUser" propagation="REQUIRES_NEW"/>
            <tx:method name="multiTransaction" propagation="REQUIRED"/>
            <tx:method name="multiUpdate" propagation="REQUIRED"/>
            <!--
                tx:method name="save*"  它表示以save字符串打头的方法
                它属于半模糊匹配。
            -->
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <!--
                tx:method name="*" 表示前面匹配完后，剩下的所有方法
                它的全模糊匹配
                read-only="true" 底层会做一些优化。

                以上三种匹配规则，优先顺序是 ： 精确匹配 => 半模糊匹配 => 全模糊匹配
             -->
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!--
        3.代理 AOP  （切入点表达式）
    -->
    <aop:config>
        <aop:advisor advice-ref="tx_advice"
            pointcut="execution(public * com.atguigu..*Service*.*(..))"
        />
    </aop:config>


</beans>